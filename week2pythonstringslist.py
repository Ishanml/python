# -*- coding: utf-8 -*-
"""week2pythonstringslist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PVusNFTq8LHBKYIjIzW8P82LwUKuEn1N
"""

name = "Data science Masters"

name.swapcase()

name.title()

name.capitalize()

"""## Reversing a String"""

name[::-1]

reversed(name)

' '.join(reversed(name))

"Krish".join("Naik")

"".join("")

" ".join("abcd")

' '.join("ant")

' '.join(reversed("ant"))

' Pwskills '.join(reversed("ant"))

list(reversed("ant"))

## typecasting
list(reversed("ant"))

str1 = "PW is a good company"

"Skills".join(str1)

for i in list(reversed(name)):
  print(i,end='')

## Removing characters from the end of the string
string_a = "pwskills "

string_a.strip()

string_a.strip(" ")

string_a.lstrip(" ")

string_a.rstrip(" ")

string_n = "Greeting to Pwskills"
string_n.replace("to","from")

name = "Krish"

name = "PWskills"

name[0]

#Not possible
#name[0] = "k"

string_n = "Greeting to Pwskills"
var_a=string_n.replace("G","T")

'hello world'

string_n = "test@gmail.com"
var_a=string_n.replace("@"," ")
var_a

'hello \nworld'

'hello \n world'

'hello \tworld'

'hello \tworld'.expandtabs()

str1 = "Welcome to pwskills. Welcome to Dat cience Masters"
str1.replace("Dat","Data").replace("cience","science")

str1

str1.isupper()

str1 = 'KRISH'

str1.isupper()

str1.islower()

str1.isspace()

' '.isspace()

if str1.isspace():
  print("Hello")

if " ".isspace():
  print("Hello")

str2 = "pwskills"

str2.endswith('s')

str2.startswith('p')

## check if all the char in string are alphanumeric
a = "abcd1234"
a.isalnum()

## to count the number of character in the strings

count = 0
for i in str2:
  count = count + 1

print(count)

len(str2)

str2

for i in str2:
  print(i)

range(len(str2))

for i in range(len(str2)):
  print(i,"=",str2[i])

# We can use index to iterate string reverse direction

len(str2)-1

for i in range(len(str2)-1,-1,-1):
  print(str2[i])

string = "pwskills"
ch = len(string) - 1
while ch >= 0:
    print(string[ch])
    ch = ch-1

ch

string[7],string[6]

for i in range(len(string)):
     print(string[len(string) - (i+1)], end = "")

Name = "pwskills"
vowels = "AaEeIiOoUu"

for ch in Name:
    if ch in vowels:
        print("{} is a vowel".format(ch))
    else:
        print("{} is not a vowel".format(ch))

"""## List"""

type([])

["Krish","Naik","Pwskills",32]

list([1,2,3,4,5])

str1

str2

list(str2)

str1 = "PW skills Data science masters"

list(str1.split(" "))

lst1 = str1.split(" ")

lst1[1:]

lst1[2]

lst1[2] = "Datas"

lst1

lst1[::-2]

lst1[-4::-2]

lst1[-5::-2]

lst1

## concatenation operation
lst1 + ['new element',3]

lst1 + [['new element',3]]

lst2 = lst1 + [['new element',3]]

lst2[-1][0]

lst1 * 2

lst1 = lst1 * 2

lst1

lst1

lst1 = str1.split(" ")

lst1

if "science" in lst1:
  print("Present")

for elements in lst1:
  if elements=="science":
    print(elements)
    break

## check elements inside a list
lst=[1,2,3,4]
4 in lst

2.0 in lst

lst1 = ["Zebra","Monkey","Donkey","Lion"]
lst2 = [5,6,2,9,5,8,6]

print(max(lst1))

max(lst2)

min(lst1)

min(lst2)

lst3 = [5,6,2,9,5,8,6]
type(lst3[0])  ## output is integer
type(5.0)     ### output is float
5.0 in lst3    ### output is true

## Append

lst = [1,2,3,4,5,6]

lst

lst.append("Pwskills")

lst

lst.append(['Data','Science','Masters'])

lst

lst1 = ["Zebra","Monkey","Donkey","Lion"]

lst1.pop()

lst1

lst1.pop(2)

lst1

lst1 = ["Zebra","Monkey","Donkey","Lion"]

removed_element = lst1.pop(0)
removed_element

#lst1[100]

## sorting and reverse method in list

new_list = ['q', 'e', 'f', 's', 't', 'u']
new_list

new_list[::-1]

## inpalce
new_list.reverse()

new_list

new_list.sort()

new_list

new_list.sort(reverse=True)

new_list

lst = [1,2,3,4,5,6]
lst.append(10)

lst.append(['Pw','Skills'])

lst

lst.extend(['PW', 'Skills'])

lst

"""## Nested list"""

# Let's make three lists
lst_1 = [1,2,3]
lst_2 = [4,5,6]
lst_3 = [7,8,9]

# Make a list of lists to form a matrix
matrix = [lst_1,lst_2,lst_3]

matrix

matrix[1][2]

matrix[2][1:]

matrix[0][0],matrix[1][0],matrix[2][0]

matrix[0:][0]

## List Comprehension
[i for i in range(20)]

## List Comprehension
## Even numbers
[i if i%2==0 else "ODD" for i in range(20)]

# Assignment
## Sum of even numbers and odd numbers
lst = [1,2,3,4,5,6,7,8]

lst = [1,2,3,4,5,6,7,8]

even_sum = 0
odd_sum = 0
for i in lst:
  if i % 2 ==0:
    even_sum +=i
  else:
    odd_sum +=i

print(even_sum)
print(odd_sum)

even_sum=sum([num for num in lst if num%2==0])

even_sum

odd_sum=sum([num for num in lst if num%2!=0])

odd_sum

lst=[1,2,3,4,5,6,7,8,9,10]
[num**2 for num in lst]

# Example 2: Create a list of only the positive numbers from a given list
numbers = [-2,-1,0,1,2]
[num for num in numbers if num > 0]

# Example 3: create a list of only the first letters of words in a list
words = ["apple", "banana", "cherry", "date"]
[word[0] for word in words]

temp = 40
(9/5)*temp+32

# Example 4: Convert a list of temperatures from celsius to Fahrenheit using list comprehension
celsius_temperatures = [0, 10, 20, 30, 40, 50]

[(9/5)*temp + 32 for temp in celsius_temperatures]

# Example 5: Flatten a list of lists into a single list
lists = [[1,2,3], [4,5,6], [7,8,9]]

[j for i in lists for j in i]

#[for i in lists]

[num for sublist in lists for num in sublist]

## Assignment
## Using both code and list comprehension
## Example 2: Create a list of only the prime numbers from a given list
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Example 3: Create a list of all possible combinations of 2 elements from a list
numbers = [1, 2, 3, 4, 5]

(1,2),(1,3)